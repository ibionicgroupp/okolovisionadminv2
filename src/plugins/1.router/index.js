import { setupLayouts } from 'virtual:meta-layouts'
import { createRouter, createWebHistory } from 'vue-router/auto'
import { onAuthStateChanged } from 'firebase/auth'
import { auth } from '@/plugins/firebase'

// -------- üîπ –æ–±–≥–æ—Ä—Ç–∫–∞ layout'—ñ–≤ --------
function recursiveLayouts(route) {
    if (route.children) {
        for (let i = 0; i < route.children.length; i++)
            route.children[i] = recursiveLayouts(route.children[i])
        return route
    }
    return setupLayouts([route])[0]
}

const router = createRouter({
    history: createWebHistory(import.meta.env.BASE_URL),
    scrollBehavior(to) {
        if (to.hash)
            return { el: to.hash, behavior: 'smooth', top: 60 }
        return { top: 0 }
    },
    extendRoutes: (pages) => [
        {
            path: '/',
            redirect: '/users', // üîπ –¥–æ–º–∞—à–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –ø—ñ—Å–ª—è –ª–æ–≥—ñ–Ω—É
        },
        ...[...pages].map((route) => recursiveLayouts(route)),
    ],
})

// -------- üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è --------
let authReady = false
let currentUser = null

onAuthStateChanged(auth, (user) => {
    currentUser = user
    authReady = true
    console.log('üîê Auth state changed:', user ? user.email : 'Not logged in')
})

router.beforeEach(async (to) => {
    // —á–µ–∫–∞—î–º–æ, –ø–æ–∫–∏ Firebase –ø—ñ–¥–≤–∞–Ω—Ç–∞–∂–∏—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ LocalStorage
    if (!authReady) {
        await new Promise((resolve) => {
            const stop = onAuthStateChanged(auth, (user) => {
                currentUser = user
                console.log('üîÑ Initial auth check:', user ? user.email : 'Not logged in')
                stop()
                resolve()
            })
        })
    }

    const isPublic = to.meta?.public === true
    const isAuthed = !!currentUser

    // ‚ùå –ø—Ä–∏–≤–∞—Ç–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞, –∞–ª–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Üí –Ω–∞ login
    if (!isPublic && !isAuthed) {
        console.log('‚õî Redirect to login (not authed)')
        return { name: 'login' }
    }

    // ‚úÖ —è–∫—â–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π —ñ –∑–∞–π—à–æ–≤ –Ω–∞ /login ‚Üí —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ /users
    if (isPublic && isAuthed && (to.name === 'login' || to.path.includes('/login'))) {
        console.log('‚û°Ô∏è Redirect from login to /users')
        return { name: 'users' }
    }

    console.log('‚úÖ Route allowed:', to.fullPath)
    return true
})

export { router }
export default function (app) {
    app.use(router)
}
